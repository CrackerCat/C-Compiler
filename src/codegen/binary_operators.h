#ifndef BINARY_OPERATORS_H
#define BINARY_OPERATORS_H
#include <parser/parser.h>

const char *binary_operator_outputs[2][IBO_COUNT] = {
	[0][IBO_ADD] = "leal\t(%rsi,%rdi), %eax",
	[0][IBO_SUB] = "movq\t%rdi, %rax\n\tsubl\t%esi, %eax",
	[0][IBO_IMUL] = "movq\t%rsi, %rax\n\timull\t%edi, %eax",
	[0][IBO_IDIV] = "movq\t%rdi, %rax\n\tcltd\n\tidivl\t%esi",
	[0][IBO_IMOD] = "movq\t%rdi, %rax\n\tcltd\n\tidivl\t%esi\n\tmovl\t%edx, %eax",
	[0][IBO_BXOR] = "movq\t%rsi, %rax\n\txorl\t%edi, %eax",
	[0][IBO_BOR] = "movq\t%rsi, %rax\n\torl\t%edi, %eax",
	[0][IBO_BAND] = "movq\t%rdi, %rax\n\tandl\t%esi, %eax",
	[0][IBO_LSHIFT] = "movq\t%rsi, %rcx\n\tmovq\t%rdi, %rax\t\n\tshll\t%cl, %eax",
	[0][IBO_IRSHIFT] = "movq\t%rsi, %rcx\n\tmovq\t%rdi, %rax\t\n\tsarl\t%cl, %eax",
	[0][IBO_ILESS] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsetl\t%al",
	[0][IBO_IGREATER] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsetg\t%al",
	[0][IBO_ILESS_EQ] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsetle\t%al",
	[0][IBO_IGREATER_EQ] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsetge\t%al",
	[0][IBO_EQUAL] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsete\t%al",
	[0][IBO_NOT_EQUAL] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsetne\t%al",
	[0][IBO_MUL] = "movq\t%rsi, %rax\n\timull\t%edi, %eax",
	[0][IBO_DIV] = "movq\t%rdi, %rax\n\txorl\t%edx, %edx\n\tdivl\t%esi",
	[0][IBO_MOD] = "movq\t%rdi, %rax\n\txorl\t%edx, %edx\n\tdivl\t%esi\n\tmovl\t%edx, %eax",
	[0][IBO_RSHIFT] = "movq\t%rsi, %rcx\n\tmovq\t%rdi, %rax\n\tshrl\t%cl, %eax",
	[0][IBO_LESS] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsetb\t%al",
	[0][IBO_GREATER] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tseta\t%al",
	[0][IBO_LESS_EQ] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsetbe\t%al",
	[0][IBO_GREATER_EQ] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsetae\t%al",
	[0][IBO_FLT_ADD] = "movd\t%edi, %xmm0\n\tmovd\t%esi, %xmm1\n\taddss\t%xmm0, %xmm1\n\tmovd\t%xmm1, %eax",
	[0][IBO_FLT_SUB] = "movd\t%edi, %xmm0\n\tmovd\t%esi, %xmm1\n\tsubss\t%xmm1, %xmm0\n\tmovd\t%xmm0, %eax",
	[0][IBO_FLT_MUL] = "movd\t%edi, %xmm0\n\tmovd\t%esi, %xmm1\n\tmulss\t%xmm0, %xmm1\n\tmovd\t%xmm1, %eax",
	[0][IBO_FLT_DIV] = "movd\t%edi, %xmm0\n\tmovd\t%esi, %xmm1\n\tdivss\t%xmm1, %xmm0\n\tmovd\t%xmm0, %eax",
	[0][IBO_FLT_LESS] = "movd\t%edi, %xmm0\n\tmovd\t%esi, %xmm1\n\txorl\t%eax, %eax\n\tucomiss\t%xmm0, %xmm1\n\tseta\t%al",
	[0][IBO_FLT_GREATER] = "movd\t%edi, %xmm0\n\tmovd\t%esi, %xmm1\n\txorl\t%eax, %eax\n\tucomiss\t%xmm1, %xmm0\n\tseta\t%al",
	[0][IBO_FLT_LESS_EQ] = "movd\t%edi, %xmm0\n\tmovd\t%esi, %xmm1\n\txorl\t%eax, %eax\n\tucomiss\t%xmm0, %xmm1\n\tsetae\t%al",
	[0][IBO_FLT_GREATER_EQ] = "movd\t%edi, %xmm0\n\tmovd\t%esi, %xmm1\n\txorl\t%eax, %eax\n\tucomiss\t%xmm1, %xmm0\n\tsetae\t%al",
	[0][IBO_FLT_EQUAL] = "movd\t%edi, %xmm0\n\tmovd\t%esi, %xmm1\n\tcmpeqss\t%xmm0, %xmm1\n\tmovd\t%xmm1, %eax\n\tandl\t$1, %eax",
	[0][IBO_FLT_NOT_EQUAL] = "movd\t%edi, %xmm0\n\tmovd\t%esi, %xmm1\n\tcmpneqss\t%xmm0, %xmm1\n\tmovd\t%xmm1, %eax\n\tandl\t$1, %eax",

	[1][IBO_ADD] = "leaq\t(%rdi,%rsi), %rax",
	[1][IBO_SUB] = "movq\t%rdi, %rax\n\tsubq\t%rsi, %rax",
	[1][IBO_IMUL] = "movq\t%rdi, %rax\n\timulq\t%rsi, %rax",
	[1][IBO_IDIV] = "movq\t%rdi, %rax\n\tcqto\n\tidivq\t%rsi",
	[1][IBO_IMOD] = "movq\t%rdi, %rax\n\tcqto\n\tidivq\t%rsi\n\tmovq\t%rdx, %rax",
	[1][IBO_BXOR] = "movq\t%rdi, %rax\n\txorq\t%rsi, %rax",
	[1][IBO_BOR] = "movq\t%rdi, %rax\n\torq\t%rsi, %rax",
	[1][IBO_BAND] = "movq\t%rdi, %rax\n\tandq\t%rsi, %rax",
	[1][IBO_LSHIFT] = "movq\t%rsi, %rcx\n\tmovq\t%rdi, %rax\n\tshlq\t%cl, %rax",
	[1][IBO_IRSHIFT] = "movq\t%rsi, %rcx\n\tmovq\t%rdi, %rax\n\tsarq\t%cl, %rax",
	[1][IBO_ILESS] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetl\t%al",
	[1][IBO_IGREATER] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetg\t%al",
	[1][IBO_ILESS_EQ] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetle\t%al",
	[1][IBO_IGREATER_EQ] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetge\t%al",
	[1][IBO_EQUAL] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsete\t%al",
	[1][IBO_NOT_EQUAL] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetne\t%al",
	[1][IBO_MUL] = "movq\t%rdi, %rax\n\timulq\t%rsi, %rax",
	[1][IBO_DIV] = "movq\t%rdi, %rax\n\txorl\t%edx, %edx\n\tdivq\t%rsi",
	[1][IBO_MOD] = "movq\t%rdi, %rax\n\txorl\t%edx, %edx\n\tdivq\t%rsi\n\tmovq\t%rdx, %rax",
	[1][IBO_RSHIFT] = "movq\t%rsi, %rcx\n\tmovq\t%rdi, %rax\n\tshrq\t%cl, %rax",
	[1][IBO_LESS] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetb\t%al",
	[1][IBO_GREATER] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tseta\t%al",
	[1][IBO_LESS_EQ] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetbe\t%al",
	[1][IBO_GREATER_EQ] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetae\t%al",
	[1][IBO_FLT_ADD] = "movq\t%rdi, %xmm0\n\tmovq\t%rsi, %xmm1\n\taddsd\t%xmm0, %xmm1\n\tmovq\t%xmm1, %rax",
	[1][IBO_FLT_SUB] = "movq\t%rdi, %xmm0\n\tmovq\t%rsi, %xmm1\n\tsubsd\t%xmm1, %xmm0\n\tmovq\t%xmm0, %rax",
	[1][IBO_FLT_MUL] = "movq\t%rdi, %xmm0\n\tmovq\t%rsi, %xmm1\n\tmulsd\t%xmm0, %xmm1\n\tmovq\t%xmm1, %rax",
	[1][IBO_FLT_DIV] = "movq\t%rdi, %xmm0\n\tmovq\t%rsi, %xmm1\n\tdivsd\t%xmm1, %xmm0\n\tmovq\t%xmm0, %rax",
	[1][IBO_FLT_LESS] = "movq\t%rdi, %xmm0\n\tmovq\t%rsi, %xmm1\n\txorl\t%eax, %eax\n\tucomisd\t%xmm0, %xmm1\n\tseta\t%al",
	[1][IBO_FLT_GREATER] = "movq\t%rdi, %xmm0\n\tmovq\t%rsi, %xmm1\n\txorl\t%eax, %eax\n\tucomisd\t%xmm1, %xmm0\n\tseta\t%al",
	[1][IBO_FLT_LESS_EQ] = "movq\t%rdi, %xmm0\n\tmovq\t%rsi, %xmm1\n\txorl\t%eax, %eax\n\tucomisd\t%xmm0, %xmm1\n\tsetae\t%al",
	[1][IBO_FLT_GREATER_EQ] = "movq\t%rdi, %xmm0\n\tmovq\t%rsi, %xmm1\n\txorl\t%eax, %eax\n\tucomisd\t%xmm1, %xmm0\n\tsetae\t%al",
	[1][IBO_FLT_EQUAL] = "movq\t%rdi, %xmm0\n\tmovq\t%rsi, %xmm1\n\tcmpeqsd\t%xmm0, %xmm1\n\tmovq\t%xmm1, %rax\n\tandl\t$1, %eax",
	[1][IBO_FLT_NOT_EQUAL] = "movq\t%rdi, %xmm0\n\tmovq\t%rsi, %xmm1\n\tcmpneqsd\t%xmm0, %xmm1\n\tmovq\t%xmm1, %rax\n\tandl\t$1, %eax",
};

#endif
