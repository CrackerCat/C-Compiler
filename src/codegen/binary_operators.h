#ifndef BINARY_OPERATORS_H
#define BINARY_OPERATORS_H
#include <parser/parser.h>

const char *binary_operator_outputs[OT_TYPE_COUNT][OP_TYPE_COUNT] = {
	[OT_INT][OP_ADD] = "leal\t(%rdi,%rsi), %eax\n",
	[OT_INT][OP_SUB] = "movl\t%edi, %eax\n\tsubl\t%esi, %eax\n",
	[OT_INT][OP_MUL] = "movl\t%edi, %eax\n\timull\t%esi, %eax\n",
	[OT_INT][OP_DIV] = "movl\t%edi, %eax\n\tcltd\n\tidivl\t%esi\n",
	[OT_INT][OP_MOD] = "movl\t%edi, %eax\n\tcltd\n\tidivl\t%esi\n\tmovl\t%edx, %eax\n",
	[OT_INT][OP_BXOR] = "movl\t%edi, %eax\n\txorl\t%esi, %eax\n",
	[OT_INT][OP_BOR] = "movl\t%edi, %eax\n\torl\t%esi, %eax\n",
	[OT_INT][OP_BAND] = "movl\t%edi, %eax\n\tandl\t%esi, %eax\n",
	[OT_INT][OP_LSHIFT] = "movl\t%edi, %eax\n\tmovl\t%esi, %ecx\n\tsall\t%cl, %eax\n",
	[OT_INT][OP_RSHIFT] = "movl\t%edi, %eax\n\tmovl\t%esi, %ecx\n\tsarl\t%cl, %eax\n",
	[OT_INT][OP_LESS] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsetl\t%al\n",
	[OT_INT][OP_GREATER] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsetg\t%al\n",
	[OT_INT][OP_LESS_EQ] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsetle\t%al\n",
	[OT_INT][OP_GREATER_EQ] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsetge\t%al\n",
	[OT_INT][OP_EQUAL] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsete\t%al\n",
	[OT_INT][OP_NOT_EQUAL] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsetne\t%al\n",
	[OT_UINT][OP_ADD] = "leal\t(%rdi,%rsi), %eax\n",
	[OT_UINT][OP_SUB] = "movl\t%edi, %eax\n\tsubl\t%esi, %eax\n",
	[OT_UINT][OP_MUL] = "movl\t%edi, %eax\n\timull\t%esi, %eax\n",
	[OT_UINT][OP_DIV] = "movl\t%edi, %eax\n\txorl\t%edx, %edx\n\tdivl\t%esi\n",
	[OT_UINT][OP_MOD] = "movl\t%edi, %eax\n\txorl\t%edx, %edx\n\tdivl\t%esi\n\tmovl\t%edx, %eax\n",
	[OT_UINT][OP_BXOR] = "movl\t%edi, %eax\n\txorl\t%esi, %eax\n",
	[OT_UINT][OP_BOR] = "movl\t%edi, %eax\n\torl\t%esi, %eax\n",
	[OT_UINT][OP_BAND] = "movl\t%edi, %eax\n\tandl\t%esi, %eax\n",
	[OT_UINT][OP_LSHIFT] = "movl\t%edi, %eax\n\tmovl\t%esi, %ecx\n\tsall\t%cl, %eax\n",
	[OT_UINT][OP_RSHIFT] = "movl\t%edi, %eax\n\tmovl\t%esi, %ecx\n\tshrl\t%cl, %eax\n",
	[OT_UINT][OP_LESS] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsetb\t%al\n",
	[OT_UINT][OP_GREATER] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tseta\t%al\n",
	[OT_UINT][OP_LESS_EQ] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsetbe\t%al\n",
	[OT_UINT][OP_GREATER_EQ] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsetnb\t%al\n",
	[OT_UINT][OP_EQUAL] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsete\t%al\n",
	[OT_UINT][OP_NOT_EQUAL] = "xorl\t%eax, %eax\n\tcmpl\t%esi, %edi\n\tsetne\t%al\n",
	[OT_LONG][OP_ADD] = "leaq\t(%rdi,%rsi), %rax\n",
	[OT_LONG][OP_SUB] = "movq\t%rdi, %rax\n\tsubq\t%rsi, %rax\n",
	[OT_LONG][OP_MUL] = "movq\t%rdi, %rax\n\timulq\t%rsi, %rax\n",
	[OT_LONG][OP_DIV] = "movq\t%rdi, %rax\n\tcqto\n\tidivq\t%rsi\n",
	[OT_LONG][OP_MOD] = "movq\t%rdi, %rax\n\tcqto\n\tidivq\t%rsi\n\tmovq\t%rdx, %rax\n",
	[OT_LONG][OP_BXOR] = "movq\t%rdi, %rax\n\txorq\t%rsi, %rax\n",
	[OT_LONG][OP_BOR] = "movq\t%rdi, %rax\n\torq\t%rsi, %rax\n",
	[OT_LONG][OP_BAND] = "movq\t%rdi, %rax\n\tandq\t%rsi, %rax\n",
	[OT_LONG][OP_LSHIFT] = "movq\t%rdi, %rax\n\tmovl\t%esi, %ecx\n\tsalq\t%cl, %rax\n",
	[OT_LONG][OP_RSHIFT] = "movq\t%rdi, %rax\n\tmovl\t%esi, %ecx\n\tsarq\t%cl, %rax\n",
	[OT_LONG][OP_LESS] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetl\t%al\n",
	[OT_LONG][OP_GREATER] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetg\t%al\n",
	[OT_LONG][OP_LESS_EQ] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetle\t%al\n",
	[OT_LONG][OP_GREATER_EQ] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetge\t%al\n",
	[OT_LONG][OP_EQUAL] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsete\t%al\n",
	[OT_LONG][OP_NOT_EQUAL] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetne\t%al\n",
	[OT_ULONG][OP_ADD] = "leaq\t(%rdi,%rsi), %rax\n",
	[OT_ULONG][OP_SUB] = "movq\t%rdi, %rax\n\tsubq\t%rsi, %rax\n",
	[OT_ULONG][OP_MUL] = "movq\t%rdi, %rax\n\timulq\t%rsi, %rax\n",
	[OT_ULONG][OP_DIV] = "movq\t%rdi, %rax\n\txorl\t%edx, %edx\n\tdivq\t%rsi\n",
	[OT_ULONG][OP_MOD] = "movq\t%rdi, %rax\n\txorl\t%edx, %edx\n\tdivq\t%rsi\n\tmovq\t%rdx, %rax\n",
	[OT_ULONG][OP_BXOR] = "movq\t%rdi, %rax\n\txorq\t%rsi, %rax\n",
	[OT_ULONG][OP_BOR] = "movq\t%rdi, %rax\n\torq\t%rsi, %rax\n",
	[OT_ULONG][OP_BAND] = "movq\t%rdi, %rax\n\tandq\t%rsi, %rax\n",
	[OT_ULONG][OP_LSHIFT] = "movq\t%rdi, %rax\n\tmovl\t%esi, %ecx\n\tsalq\t%cl, %rax\n",
	[OT_ULONG][OP_RSHIFT] = "movq\t%rdi, %rax\n\tmovl\t%esi, %ecx\n\tshrq\t%cl, %rax\n",
	[OT_ULONG][OP_LESS] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetb\t%al\n",
	[OT_ULONG][OP_GREATER] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tseta\t%al\n",
	[OT_ULONG][OP_LESS_EQ] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetbe\t%al\n",
	[OT_ULONG][OP_GREATER_EQ] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetnb\t%al\n",
	[OT_ULONG][OP_EQUAL] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsete\t%al\n",
	[OT_ULONG][OP_NOT_EQUAL] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetne\t%al\n",
	[OT_LLONG][OP_ADD] = "leaq\t(%rdi,%rsi), %rax\n",
	[OT_LLONG][OP_SUB] = "movq\t%rdi, %rax\n\tsubq\t%rsi, %rax\n",
	[OT_LLONG][OP_MUL] = "movq\t%rdi, %rax\n\timulq\t%rsi, %rax\n",
	[OT_LLONG][OP_DIV] = "movq\t%rdi, %rax\n\tcqto\n\tidivq\t%rsi\n",
	[OT_LLONG][OP_MOD] = "movq\t%rdi, %rax\n\tcqto\n\tidivq\t%rsi\n\tmovq\t%rdx, %rax\n",
	[OT_LLONG][OP_BXOR] = "movq\t%rdi, %rax\n\txorq\t%rsi, %rax\n",
	[OT_LLONG][OP_BOR] = "movq\t%rdi, %rax\n\torq\t%rsi, %rax\n",
	[OT_LLONG][OP_BAND] = "movq\t%rdi, %rax\n\tandq\t%rsi, %rax\n",
	[OT_LLONG][OP_LSHIFT] = "movq\t%rdi, %rax\n\tmovl\t%esi, %ecx\n\tsalq\t%cl, %rax\n",
	[OT_LLONG][OP_RSHIFT] = "movq\t%rdi, %rax\n\tmovl\t%esi, %ecx\n\tsarq\t%cl, %rax\n",
	[OT_LLONG][OP_LESS] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetl\t%al\n",
	[OT_LLONG][OP_GREATER] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetg\t%al\n",
	[OT_LLONG][OP_LESS_EQ] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetle\t%al\n",
	[OT_LLONG][OP_GREATER_EQ] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetge\t%al\n",
	[OT_LLONG][OP_EQUAL] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsete\t%al\n",
	[OT_LLONG][OP_NOT_EQUAL] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetne\t%al\n",
	[OT_ULLONG][OP_ADD] = "leaq\t(%rdi,%rsi), %rax\n",
	[OT_ULLONG][OP_SUB] = "movq\t%rdi, %rax\n\tsubq\t%rsi, %rax\n",
	[OT_ULLONG][OP_MUL] = "movq\t%rdi, %rax\n\timulq\t%rsi, %rax\n",
	[OT_ULLONG][OP_DIV] = "movq\t%rdi, %rax\n\txorl\t%edx, %edx\n\tdivq\t%rsi\n",
	[OT_ULLONG][OP_MOD] = "movq\t%rdi, %rax\n\txorl\t%edx, %edx\n\tdivq\t%rsi\n\tmovq\t%rdx, %rax\n",
	[OT_ULLONG][OP_BXOR] = "movq\t%rdi, %rax\n\txorq\t%rsi, %rax\n",
	[OT_ULLONG][OP_BOR] = "movq\t%rdi, %rax\n\torq\t%rsi, %rax\n",
	[OT_ULLONG][OP_BAND] = "movq\t%rdi, %rax\n\tandq\t%rsi, %rax\n",
	[OT_ULLONG][OP_LSHIFT] = "movq\t%rdi, %rax\n\tmovl\t%esi, %ecx\n\tsalq\t%cl, %rax\n",
	[OT_ULLONG][OP_RSHIFT] = "movq\t%rdi, %rax\n\tmovl\t%esi, %ecx\n\tshrq\t%cl, %rax\n",
	[OT_ULLONG][OP_LESS] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetb\t%al\n",
	[OT_ULLONG][OP_GREATER] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tseta\t%al\n",
	[OT_ULLONG][OP_LESS_EQ] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetbe\t%al\n",
	[OT_ULLONG][OP_GREATER_EQ] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetnb\t%al\n",
	[OT_ULLONG][OP_EQUAL] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsete\t%al\n",
	[OT_ULLONG][OP_NOT_EQUAL] = "xorl\t%eax, %eax\n\tcmpq\t%rsi, %rdi\n\tsetne\t%al\n",
	/* [OT_PTR][OP_ADD] = "", */
	/* [OT_PTR][OP_SUB] = "", */
	/* [OT_PTR][OP_MUL] = "", */
	/* [OT_PTR][OP_DIV] = "", */
	/* [OT_PTR][OP_MOD] = "", */
	/* [OT_PTR][OP_BXOR] = "", */
	/* [OT_PTR][OP_BOR] = "", */
	/* [OT_PTR][OP_BAND] = "", */
	/* [OT_PTR][OP_LSHIFT] = "", */
	/* [OT_PTR][OP_RSHIFT] = "", */
	[OT_PTR][OP_LESS] = "xorl\t%eax, %eax\n\tcmpq\t%rdi, %rsi\n\tseta\t%al\n",
	[OT_PTR][OP_GREATER] = "xorl\t%eax, %eax\n\tcmpq\t%rdi, %rsi\n\tsetb\t%al\n",
	[OT_PTR][OP_LESS_EQ] = "xorl\t%eax, %eax\n\tcmpq\t%rdi, %rsi\n\tsetnb\t%al\n",
	[OT_PTR][OP_GREATER_EQ] = "xorl\t%eax, %eax\n\tcmpq\t%rdi, %rsi\n\tsetbe\t%al\n",
	[OT_PTR][OP_EQUAL] = "xorl\t%eax, %eax\n\tcmpq\t%rdi, %rsi\n\tsete\t%al\n",
	[OT_PTR][OP_NOT_EQUAL] = "xorl\t%eax, %eax\n\tcmpq\t%rdi, %rsi\n\tsetne\t%al\n",
};

#endif
